{"version":3,"sources":["assets/img/ReactSeoLogo.svg","components/Footer.tsx","config/routes.config.ts","components/NavBar.tsx","components/MetaInfo.tsx","components/NotFound.tsx","components/BackToTop.tsx","Layout.tsx","containers/Home/components/FeatureList.tsx","config/features.config.ts","containers/Home/Home.tsx","containers/About/About.tsx","withTracker.tsx","App.tsx","config/fa.config.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Footer","className","target","aria-label","rel","href","icon","RoutesConfig","Object","freeze","Home","path","exact","displayName","activeClassName","metaInfo","title","description","About","ReactSeoLogoSvg","require","NavBar","role","width","src","alt","to","MetaInfo","React","memo","Helmet","name","content","NotFound","isLocation404","window","location","pathname","useLayoutEffect","size","scroll","Scroll","animateScroll","scrollOptions","delay","duration","smooth","BackToTopLink","styled","a","$show","AngleDoubleUpIcon","FontAwesomeIcon","BackToTop","showRef","useRef","useState","show","setShow","useEffect","handleScroll","current","scrollY","pageYOffset","addEventListener","removeEventListener","onClick","scrollToTop","Layout","children","FeatureList","featureList","map","packageName","index","key","FeatureInfoConfig","typescript","css","pwa","reacthelmet","reactga","prerender","useMemo","keys","ReactGA","initialize","withTracker","WrappedComponent","options","props","page","set","pageview","App","component","library","add","faCheck","faReact","faGithub","faMediumM","faTwitter","faInfoCircle","faAngleDoubleUp","faExternalLinkAlt","faExclamationCircle","Boolean","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qMAAAA,EAAOC,QAAU,IAA0B,0C,kFCkC5BC,MA/BU,IACvB,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,WACb,uBACEC,OAAO,SACPC,aAAW,SACXC,IAAI,sBACJH,UAAU,mBACVI,KAAK,kCAEL,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,aAEjC,uBACED,KAAK,KACLF,aAAW,UACXF,UAAU,oBAEV,kBAAC,IAAD,CAAiBK,KAAM,CAAC,MAAO,cAEjC,uBACED,KAAK,KACLF,aAAW,SACXF,UAAU,oBAEV,kBAAC,IAAD,CAAiBK,KAAM,CAAC,MAAO,gBAGnC,yBAAKL,UAAU,WAAf,8C,QChBG,MAAMM,EAAeC,OAAOC,OAA8B,CAC/DC,KAAM,CACJC,KAAM,IACNC,OAAO,EACPC,YAAa,OACbC,gBAAiB,YACjBR,KAAM,OACNS,SAAU,CACRC,MAAO,qCACPC,YAAa,uEAGjBC,MAAO,CACLP,KAAM,SACNC,OAAO,EACPC,YAAa,QACbC,gBAAiB,YACjBR,KAAM,OACNS,SAAU,CACRC,MAAO,sCACPC,YAAa,0EC7BbE,EAAkBC,EAAQ,IAiDjBC,MA/CU,IACvB,yBACEC,KAAK,aACLrB,UAAU,SACVE,aAAW,mBAEX,yBAAKF,UAAU,kBACb,yBAAKA,UAAU,iBACb,yBACEsB,MAAM,MACNC,IAAKL,EACLM,IAAI,wBAGR,yBAAKxB,UAAU,iBACb,kBAAC,IAAD,CACEA,UAAU,cACVyB,GAAInB,EAAaG,KAAKC,KACtBC,MAAOL,EAAaG,KAAKE,MACzBE,gBAAiBP,EAAaG,KAAKI,iBAEnC,8BAAOP,EAAaG,KAAKG,cAE3B,kBAAC,IAAD,CACEZ,UAAU,cACVyB,GAAInB,EAAaW,MAAMP,KACvBC,MAAOL,EAAaW,MAAMN,MAC1BE,gBAAiBP,EAAaW,MAAMJ,iBAEpC,8BAAOP,EAAaW,MAAML,cAE5B,yBAAKZ,UAAU,cACf,uBACEC,OAAO,SACPC,aAAW,SACXF,UAAU,cACVG,IAAI,sBACJC,KAAK,kCAEL,wCACA,kBAAC,IAAD,CAAiBC,KAAK,0B,QCvChC,MAAMqB,EAAoCC,IAAMC,KAAK,EAAGb,QAAOC,iBAC7D,kBAACa,EAAA,EAAD,KACE,+BAAQd,GACR,0BAAMe,KAAK,WAAWC,QAAShB,IAC/B,0BAAMe,KAAK,cAAcC,QAASf,IAClC,0BAAMc,KAAK,iBAAiBC,QAASf,MAIzCU,EAASd,YAAc,WAERc,QCSAM,MAzBY,KACzB,MAAMC,EAAiBC,QAAuC,SAA7BA,OAAOC,SAASC,SAC3CpC,EAAS,+CAA2CiC,EAAgB,uBAAyB,QAQnG,OANAI,0BAAgB,KACmB,SAA7BH,OAAOC,SAASC,WAClBF,OAAOC,SAAS/B,KAAO,SAExB,IAGD,6BAASJ,UAAU,0BACjB,yBAAKA,UAAU,0EACb,yBAAKA,UAAWA,GACd,6BACE,kBAAC,IAAD,CAAiBK,KAAK,qBAAqBiC,KAAK,OAChD,0BAAMtC,UAAU,SAAhB,kBAEF,uBAAGA,UAAU,YAAb,8C,swBCfV,MAAMuC,EAASC,IAAOC,cAEhBC,EAAgB,CACpBC,MAAO,EACPC,SAAU,IACVC,OAAQ,kBAIJC,EAAgBC,IAAOC,EAAV,IAgBP,EAAGC,WAAYA,EAAQ,UAAY,UAClC,EAAGA,WAAYA,EAAQ,EAAI,GAGlCC,EAAoBH,YAAOI,IAAPJ,CAAH,KA4CRK,MAlCa,KAC1B,MAAMC,EAAUC,kBAAgB,GADA,EAERC,oBAAkB,GAFV,mBAEzBC,EAFyB,KAEnBC,EAFmB,KAsBhC,OAlBAC,oBAAU,KACR,MAAMC,EAAe,MACdN,EAAQO,UAAY1B,OAAO2B,SAAW3B,OAAO4B,aAAe,KAC/DT,EAAQO,SAAU,EAClBH,GAAQ,IAC4C,KAA1CvB,OAAO2B,SAAW3B,OAAO4B,eACnCT,EAAQO,SAAU,EAClBH,GAAQ,KAMZ,OAFAvB,OAAO6B,iBAAiB,SAAUJ,GAE3B,KACLzB,OAAO8B,oBAAoB,SAAUL,KAEtC,IAGD,kBAACb,EAAD,CACEG,MAAOO,EACPnC,KAAK,SACLnB,aAAW,YACX+D,QAAS,IAAM1B,EAAO2B,YAAYxB,IAElC,kBAACQ,EAAD,CAAmB7C,KAAK,sBC9Df8D,MATU,EAAGC,cAC1B,kBAAC,WAAD,KACE,kBAAC,EAAD,MACCA,EACD,kBAAC,EAAD,MACA,kBAAC,EAAD,OCAJ,MAAMC,EAAc1C,IAAMC,KAAuB,EAAG0C,iBAClD,kBAAC,WAAD,KACGA,EAAYC,IAAI,EAAGC,cAAaxD,eAA4ByD,IACzD,wBAAIC,IAAKD,EAAOzE,UAAU,YACxB,kBAAC,IAAD,CAAiBK,KAAK,UADxB,WAEOW,EAFP,KAGGwD,GAAe,8BAAOA,OAOjCH,EAAYzD,YAAc,cAEXyD,QClBR,MAAMM,EAAoBpE,OAAOC,OAAoC,CAC1EoE,WAAY,CACV5D,YAAa,oBAEf6D,IAAK,CACH7D,YAAa,+DAEf8D,IAAK,CACH9D,YAAa,6CAEf+D,YAAa,CACX/D,YAAa,gDACbwD,YAAa,gBAEfQ,QAAS,CACPhE,YAAa,6DACbwD,YAAa,YAEfS,UAAW,CACTjE,YAAa,6CACbwD,YAAa,oBCgGF/D,MAlHQ,KACrB,MAAM6D,EAAcY,kBAAuB,IAClC3E,OAAO4E,KAAKR,GAAmBJ,IAAKG,GAAQC,EAAkBD,IACpE,IAEH,OACE,yBAAK1E,UAAU,gBACb,kBAAC,EAAaM,EAAaG,KAAKK,UAChC,6BAASd,UAAU,gBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,gCACb,4BAAQA,UAAU,oBAChB,kBAAC,IAAD,CACEK,KAAM,CAAC,MAAO,SACdL,UAAU,wCAIhB,wBAAIA,UAAU,oBAAd,oBACA,6BACA,kBAAC,EAAD,CAAasE,YAAaA,OAIhC,6BAAStE,UAAU,+BACjB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,uBAAGA,UAAU,SAAb,gBACA,yBAAKA,UAAU,WACb,2BACE,8CADF,8OAOA,uTASJ,6BACA,yBAAKA,UAAU,UACb,uBAAGA,UAAU,SAAb,YACA,yBAAKA,UAAU,WACb,2BACE,0CADF,2WAQA,iRAQJ,6BACA,yBAAKA,UAAU,UACb,uBAAGA,UAAU,SAAb,kBACA,yBAAKA,UAAU,WACb,2BACE,gDADF,4HAKA,ucAYN,6BACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,uBAAGA,UAAU,SAAb,eACA,yBAAKA,UAAU,WAAf,+4BC9EGiB,MAfS,IACtB,6BAASjB,UAAU,0BACjB,kBAAC,EAAaM,EAAaW,MAAMH,UACjC,yBAAKd,UAAU,wDACb,yBAAKA,UAAU,iEACb,6BACE,kBAAC,IAAD,CAAiBK,KAAK,cAAciC,KAAK,OACzC,0BAAMtC,UAAU,SAAhB,eAEF,uBAAGA,UAAU,YAAb,gD,gBCTRoF,IAAQC,WAAW,gBAGZ,MAAMC,EAAc,CACzBC,EACAC,EAAwB,KAOhBC,IAAc,MACZrD,EAAaqD,EAAMtD,SAAnBC,SAMR,OAJAsB,oBAAU,KAROgC,QASLtD,EARZgD,IAAQO,IAAR,aAAcD,QAASF,IACvBJ,IAAQQ,SAASF,IAQd,CAACtD,IAEG,kBAACmD,EAAqBE,I,WCElBI,MAlBO,IACpB,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnF,KAAMJ,EAAaG,KAAKC,KACxBoF,UAAWR,EAAY7E,GACvBE,MAAOL,EAAaG,KAAKE,QAE3B,kBAAC,IAAD,CACED,KAAMJ,EAAaW,MAAMP,KACzBoF,UAAWR,EAAYrE,GACvBN,MAAOL,EAAaW,MAAMN,QAE5B,kBAAC,IAAD,CAAOmF,UAAW9D,M,wBCJxB+D,IAAQC,IACNC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KCdkBC,QACW,cAA7BxE,OAAOC,SAASwE,UAEe,UAA7BzE,OAAOC,SAASwE,UAEhBzE,OAAOC,SAASwE,SAASC,MACvB,2DCVNC,iBACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAKC,IACjCA,EAAaC,iB","file":"static/js/main.a8da421b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ReactSeoLogo.75ac7406.svg\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Footer: React.FC = () => (\n  <footer className='footer'>\n    <div className='buttons'>\n      <a\n        target='_blank'\n        aria-label='GitHub'\n        rel='noopener noreferrer'\n        className='button is-medium'\n        href='https://github.com/based-ghost'\n      >\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n      <a\n        href='#/'\n        aria-label='Twitter'\n        className='button is-medium'\n      >\n        <FontAwesomeIcon icon={['fab', 'twitter']} />\n      </a>\n      <a\n        href='#/'\n        aria-label='Medium'\n        className='button is-medium'\n      >\n        <FontAwesomeIcon icon={['fab', 'medium-m']} />\n      </a>\n    </div>\n    <div className='content'>ReactSeoFriendlySpaTemplate.com &copy; 2019</div>\n  </footer>\n);\n\nexport default Footer;\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\n\nexport type Route = {\n  readonly path: string;\n  readonly icon: IconProp;\n  readonly exact?: boolean;\n  readonly displayName: string;\n  readonly activeClassName: string;\n  readonly metaInfo: {\n    readonly title?: string;\n    readonly description?: string;\n  };\n};\n\nexport const RoutesConfig = Object.freeze<Record<string, Route>>({\n  Home: {\n    path: '/',\n    exact: true,\n    displayName: 'Home',\n    activeClassName: 'is-active',\n    icon: 'home',\n    metaInfo: {\n      title: 'Home | ReactSeoFriendlySpaTemplate',\n      description: 'Home page description - limit of 160 characters (try for 150-155).'\n    }\n  },\n  About: {\n    path: '/about',\n    exact: true,\n    displayName: 'About',\n    activeClassName: 'is-active',\n    icon: 'info',\n    metaInfo: {\n      title: 'About | ReactSeoFriendlySpaTemplate',\n      description: 'About page description - limit of 160 characters (try for 150-155).'\n    }\n  }\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { RoutesConfig } from '../config/routes.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ReactSeoLogoSvg = require('../assets/img/ReactSeoLogo.svg') as string;\n\nconst NavBar: React.FC = () => (\n  <nav\n    role='navigation'\n    className='navbar'\n    aria-label='main navigation'\n  >\n    <div className='navbar-wrapper'>\n      <div className='brand-wrapper'>\n        <img\n          width='170'\n          src={ReactSeoLogoSvg}\n          alt='react-seo-template'\n        />\n      </div>\n      <div className='navbar-routes'>\n        <NavLink\n          className='navbar-item'\n          to={RoutesConfig.Home.path}\n          exact={RoutesConfig.Home.exact}\n          activeClassName={RoutesConfig.Home.activeClassName}\n        >\n          <span>{RoutesConfig.Home.displayName}</span>\n        </NavLink>\n        <NavLink\n          className='navbar-item'\n          to={RoutesConfig.About.path}\n          exact={RoutesConfig.About.exact}\n          activeClassName={RoutesConfig.About.activeClassName}\n        >\n          <span>{RoutesConfig.About.displayName}</span>\n        </NavLink>\n        <div className='seperator' />\n        <a\n          target='_blank'\n          aria-label='GitHub'\n          className='navbar-item'\n          rel='noopener noreferrer'\n          href='https://github.com/based-ghost'\n        >\n          <span>GitHub</span>\n          <FontAwesomeIcon icon='external-link-alt' />\n        </a>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\ntype MetaInfoProps = {\n  readonly title?: string;\n  readonly description?: string;\n};\n\nconst MetaInfo: React.FC<MetaInfoProps> = React.memo(({ title, description }) => (\n  <Helmet>\n    <title>{title}</title>\n    <meta name='og:title' content={title} />\n    <meta name='description' content={description} />\n    <meta name='og:description' content={description} />\n  </Helmet>\n));\n\nMetaInfo.displayName = 'MetaInfo';\n\nexport default MetaInfo;\n","import React, { useLayoutEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NotFound: React.FC = () => {\n  const isLocation404 = (window && window.location.pathname === '/404');\n  const className = `notification tile is-child is-danger ${isLocation404 ? 'rubberBand-animation' : 'hide'}`;\n\n  useLayoutEffect(() => {\n    if (window.location.pathname !== '/404') {\n      window.location.href = '/404';\n    }\n  }, []);\n\n  return (\n    <section className='container view-wrapper'>\n      <div className='tile is-parent is-8 is-vertical is-notification-tile is-not-found-tile'>\n        <div className={className}>\n          <div>\n            <FontAwesomeIcon icon='exclamation-circle' size='2x' />\n            <span className='title'>404 Not Found</span>\n          </div>\n          <p className='subtitle'>The requested page could not be found.</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import React, { useEffect, useState, useRef } from 'react';\nimport Scroll from 'react-scroll';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n// 'react-scroll' configuration\nconst scroll = Scroll.animateScroll;\n\nconst scrollOptions = {\n  delay: 5,\n  duration: 500,\n  smooth: 'easeInOutCubic'\n};\n\n// 'styled-components' specific to BackToTop.tsx component\nconst BackToTopLink = styled.a<{ $show: boolean }>`\n  width: 3.5rem;\n  z-index: 9999;\n  display: block;\n  height: 3.5rem;\n  right: 1.25rem;\n  cursor: pointer;\n  position: fixed;\n  user-select: none;\n  border-radius: 50%;\n  -webkit-touch-callout: none;\n  background: rgb(37, 40, 47);\n  -webkit-tap-highlight-color: transparent;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 20px;\n  transition: opacity 0.4s ease, bottom 0.4s ease;\n  bottom: ${({ $show }) => $show ? '1.25rem' : '-3.5rem'};\n  opacity: ${({ $show }) => $show ? 1 : 0};\n`;\n\nconst AngleDoubleUpIcon = styled(FontAwesomeIcon)`\n  display: block;\n  color: #61dafb;\n  font-size: 1.75em;\n  padding-left: 0.1rem;\n  margin: 0.75rem auto auto auto;\n`;\n\n// Write the show state value to a ref so we can use it as a check to prevent\n// ...re-renders on every scroll down that triggers a show for the button\nconst BackToTop: React.FC = () => {\n  const showRef = useRef<boolean>(false);\n  const [show, setShow] = useState<boolean>(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (!showRef.current && (window.scrollY || window.pageYOffset) > 100) {\n        showRef.current = true;\n        setShow(true);\n      } else if ((window.scrollY || window.pageYOffset) === 0) {\n        showRef.current = false;\n        setShow(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <BackToTopLink\n      $show={show}\n      role='button'\n      aria-label='BackToTop'\n      onClick={() => scroll.scrollToTop(scrollOptions)}\n    >\n      <AngleDoubleUpIcon icon='angle-double-up' />\n    </BackToTopLink>\n  );\n};\n\nexport default BackToTop;\n","import React, { Fragment } from 'react';\nimport { Footer, NavBar, BackToTop } from './components';\n\nconst Layout: React.FC = ({ children }) => (\n  <Fragment>\n    <NavBar />\n    {children}\n    <BackToTop />\n    <Footer />\n  </Fragment>\n);\n\nexport default Layout;\n","import React, { Fragment } from 'react';\nimport { FeatureInfo } from '../../../config/features.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype FeatureListProps = {\n  readonly featureList: FeatureInfo[];\n};\n\nconst FeatureList = React.memo<FeatureListProps>(({ featureList }) => (\n  <Fragment>\n    {featureList.map(({ packageName, description }: FeatureInfo, index: number) => (\n        <h2 key={index} className='subtitle'>\n          <FontAwesomeIcon icon='check' />\n          {` ${description} `}\n          {packageName && <code>{packageName}</code>}\n        </h2>\n      )\n    )}\n  </Fragment>\n));\n\nFeatureList.displayName = 'FeatureList';\n\nexport default FeatureList;","export type FeatureInfo = {\n  readonly description: string;\n  readonly packageName?: string;\n};\n\nexport const FeatureInfoConfig = Object.freeze<Record<string, FeatureInfo>>({\n  typescript: {\n    description: 'TypeScript + TSX'\n  },\n  css: {\n    description: 'UI styled with Bulma CSS + SASS + Font Awesome 5 (svg-core)'\n  },\n  pwa: {\n    description: 'Configured as a (PWA) Progressive Web App'\n  },\n  reacthelmet: {\n    description: 'Meta tags dynamically handled per route using',\n    packageName: 'react-helmet'\n  },\n  reactga: {\n    description: 'Google Analytics ready to go and easily configurable using',\n    packageName: 'react-ga'\n  },\n  prerender: {\n    description: 'Configured to serve prerendered html using',\n    packageName: 'react-snapshot'\n  },\n});","import React, { useMemo } from 'react';\nimport { FeatureList } from './components';\nimport { MetaInfo } from '../../components';\nimport { RoutesConfig } from '../../config/routes.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FeatureInfoConfig, FeatureInfo } from '../../config/features.config';\n\nconst Home: React.FC = () => {\n  const featureList = useMemo<FeatureInfo[]>(() => {\n    return Object.keys(FeatureInfoConfig).map((key) => FeatureInfoConfig[key]);\n  }, []);\n\n  return (\n    <div className='view-wrapper'>\n      <MetaInfo {...RoutesConfig.Home.metaInfo} />\n      <section className='hero is-dark'>\n        <div className='hero-body'>\n          <div className='container has-text-centered'>\n            <div className='is-flex is-horizontal-center'>\n              <figure className='image is-158x158'>\n                <FontAwesomeIcon\n                  icon={['fab', 'react']}\n                  className='react-svg spinClockwise-animation'\n                />\n              </figure>\n            </div>\n            <h1 className='title blog-title'>SEO Friendly SPA</h1>\n            <hr />\n            <FeatureList featureList={featureList} />\n          </div>\n        </div>\n      </section>\n      <section className='container dashboard-content'>\n        <div className='columns'>\n          <div className='column'>\n            <p className='title'>react-helmet</p>\n            <div className='content'>\n              <p>\n                <code>react-helmet</code> is a React plugin that allows you to\n                manage your app's meta information, much like vue-meta does for\n                Vue (vue-meta is based on react-helmet). It makes use of a\n                reusable component that takes plain HTML tags and outputs plan\n                HTML tags.\n              </p>\n              <p>\n                These properties, when set on a deeply nested component, will\n                cleverly overwrite their parent components' meta tag information,\n                thereby enabling custom info for each top-level view as well as\n                coupling meta info directly to deeply nested subcomponents for\n                more maintainable code.\n              </p>\n            </div>\n          </div>\n          <hr />\n          <div className='column'>\n            <p className='title'>react-ga</p>\n            <div className='content'>\n              <p>\n                <code>react-ga</code> is a JavaScript module that can be used to\n                include Google Analytics tracking code in a website or app that\n                uses React for its front-end codebase. It does not currently use\n                any React code internally, but has been written for use with a\n                number of Mozilla Foundation websites that are using React, as a\n                way to standardize our GA Instrumentation across projects.\n              </p>\n              <p>\n                It is designed to work with the latest version of Google\n                Analytics, Universal Analytics. At this point, all Google\n                Analytics projects are being upgraded to Universal Analytics, so\n                this module will not support the older ga.js implementation.\n              </p>\n            </div>\n          </div>\n          <hr />\n          <div className='column'>\n            <p className='title'>react-snapshot</p>\n            <div className='content'>\n              <p>\n                <code>react-snapshot</code> is a zero-configuration static\n                pre-renderer for React apps. Starting by targeting Create React\n                App (because it's great)\n              </p>\n              <p>\n                Prerendering differs from (SSR) Server Side Rendering. You can get\n                almost all the advantages of it (without the disadvantages) by\n                using prerendering. Prerendering is basically firing up a headless\n                browser, loading your app's routes, and saving the results to a\n                static HTML file. You can then serve it with whatever\n                static-file-serving solution you were using previously. It just\n                works with HTML5 navigation and the likes.\n              </p>\n            </div>\n          </div>\n        </div>\n        <hr />\n        <div className='columns'>\n          <div className='column'>\n            <p className='title'>Lorem Ipsum</p>\n            <div className='content'>\n              Lorem ipsum dolor sit amet, alia appareat usu id, has legere facilis\n              in. Nam inani malorum epicuri id, illud eleifend reformidans nec cu.\n              Stet meis rebum quo an, ad recusabo praesent reprimique duo, ne\n              delectus expetendis philosophia nam. Mel lorem recusabo ex, vim\n              congue facilisis eu, id vix oblique mentitum. Vide aeterno duo ei.\n              Qui ne urbanitas conceptam deseruisse, commune philosophia eos no.\n              Id ullum reprimique qui, vix ei malorum assueverit contentiones. Nec\n              facilis dignissim efficiantur ad, tantas tempor nam in. Per feugait\n              atomorum ut. Novum appareat ei usu, an usu omnium concludaturque. Et\n              nam latine mentitum, impedit explicari ullamcorper ut est, vis ipsum\n              viderer ei. Porro essent eu per, ut tantas dissentias vim. Dicant\n              regione argumentum vis id, adipisci accusata postulant at vix.\n              Adipisci vituperata ea duo, eu summo detracto mei, et per option\n              periculis. Eos laudem vivendo ex.\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { MetaInfo } from '../../components';\nimport { RoutesConfig } from '../../config/routes.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst About: React.FC = () => (\n  <section className='container view-wrapper'>\n    <MetaInfo {...RoutesConfig.About.metaInfo} />\n    <div className='tile is-parent is-8 is-vertical is-notification-tile'>\n      <div className='notification tile is-child is-primary pageSlideDown-animation'>\n        <div>\n          <FontAwesomeIcon icon='info-circle' size='2x' />\n          <span className=\"title\">About Page</span>\n        </div>\n        <p className='subtitle'>Very interesting information may go here.</p>\n      </div>\n    </div>\n  </section>\n);\n\nexport default About;\n","import React, { useEffect } from 'react';\nimport ReactGA, { FieldsObject } from 'react-ga';\nimport { RouteComponentProps } from 'react-router-dom';\n\n// Initialize the react-ga plugin using your issued GA tracker code\nReactGA.initialize('UA-0000000-0');\n\n// React.FC component used as a wrapper for route components - e.g. withTracker(RouteComponent)\nexport const withTracker = <P extends RouteComponentProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: FieldsObject = {}\n) => {\n  const trackPage = (page: string) => {\n    ReactGA.set({ page, ...options });\n    ReactGA.pageview(page);\n  };\n\n  return (props: P) => {\n    const { pathname } = props.location;\n\n    useEffect(() => {\n      trackPage(pathname);\n    }, [pathname]);\n\n    return <WrappedComponent {...props} />;\n  };\n};\n","import React from 'react';\nimport Layout from './Layout';\nimport { NotFound } from './components';\nimport { Home, About } from './containers';\nimport { withTracker } from './withTracker';\nimport { Route, Switch } from 'react-router-dom';\nimport { RoutesConfig } from './config/routes.config';\n\nconst App: React.FC = () => (\n  <Layout>\n    <Switch>\n      <Route\n        path={RoutesConfig.Home.path}\n        component={withTracker(Home)}\n        exact={RoutesConfig.Home.exact}\n      />\n      <Route\n        path={RoutesConfig.About.path}\n        component={withTracker(About)}\n        exact={RoutesConfig.About.exact}\n      />\n      <Route component={NotFound} />\n    </Switch>\n  </Layout>\n);\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\n\nimport {\n  faCheck,\n  faInfoCircle,\n  faAngleDoubleUp,\n  faExternalLinkAlt,\n  faExclamationCircle,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faReact,\n  faGithub,\n  faMediumM,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(\n  faCheck,\n  faReact,\n  faGithub,\n  faMediumM,\n  faTwitter,\n  faInfoCircle,\n  faAngleDoubleUp,\n  faExternalLinkAlt,\n  faExclamationCircle,\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './assets/style/main.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './config/fa.config';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}